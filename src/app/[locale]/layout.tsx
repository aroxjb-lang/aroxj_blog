import type { Metadata } from "next";
import { Geist } from "next/font/google";
import "./globals.css";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";
import { setRequestLocale } from "next-intl/server";
import Header from "../components/Header";
import { Suspense } from "react";
import MUIThemeProvider from "../lib/context/themeContext";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import localFont from "next/font/local";
import Loading from "./loading";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const bebas = localFont({
  src: "../fonts/bebasNeue.ttf",
  display: "swap",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }
  setRequestLocale(locale);

  return (
    <html lang={locale}>
      <body className={` ${bebas.className} ${geistSans.variable} `}>
        <NextIntlClientProvider>
          <MUIThemeProvider>
            <Header />
            <Suspense fallback={<Loading />}>{children}</Suspense>
          </MUIThemeProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
